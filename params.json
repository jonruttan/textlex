{"name":"Textlex","tagline":"Lexical analyser using TextMate-style grammars.","body":"A lexical analyser using TextMate-style grammars: reads in code, returns an array containing an array of tokens for each line.\r\n\r\nBased on code converted from the [Highlights](https://github.com/atom/highlights) project.\r\n\r\n[![Build Status](https://travis-ci.org/jonruttan/textlex.svg)](https://travis-ci.org/jonruttan/textlex)\r\n\r\n### Installing\r\n\r\n```sh\r\nnpm install textlex\r\n```\r\n\r\n### Using\r\n\r\nRun `textlex -h` for full details about the supported options.\r\n\r\nTo convert a source file to tokenized JSON run the following:\r\n\r\n```sh\r\ntextlex file.coffee -o file.json\r\n```\r\n\r\nNow you have a `file.json` file with an array of line token arrays.\r\n\r\nCheck out the [examples](https://jonruttan.github.io/textlex/examples) to see\r\nit in action.\r\n\r\n#### Using in code\r\n\r\nTo convert a source file to tokens use the following code:\r\n\r\n```coffee\r\ntextlex = require 'textlex'\r\ntextlexer = new textlex()\r\nlinetokens = textlexer.lexSync\r\n  fileContents: \"var hello = 'world';\"\r\n  scopeName: 'source.js'\r\n\r\nconsole.log JSON.stringify linetokens, null, 2\r\n```\r\n\r\nOutputs:\r\n\r\n```js\r\n[\r\n  [\r\n    {\r\n      \"value\": \"var\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"storage.modifier.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \" hello \",\r\n      \"scopes\": [\r\n        \"source.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"=\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"keyword.operator.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \" \",\r\n      \"scopes\": [\r\n        \"source.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"'\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"string.quoted.single.js\",\r\n        \"punctuation.definition.string.begin.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"world\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"string.quoted.single.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \"'\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"string.quoted.single.js\",\r\n        \"punctuation.definition.string.end.js\"\r\n      ]\r\n    },\r\n    {\r\n      \"value\": \";\",\r\n      \"scopes\": [\r\n        \"source.js\",\r\n        \"punctuation.terminator.statement.js\"\r\n      ]\r\n    }\r\n  ]\r\n]\r\n```\r\n\r\n### Loading Grammars From Modules\r\n\r\ntextlex exposes the method `requireGrammarsSync`, for loading grammars from\r\nnpm modules. The usage is as follows:\r\n\r\n```bash\r\nnpm install atom-language-clojure\r\n```\r\n\r\n```coffee\r\ntextlex = require 'textlex'\r\ntextlexer = new textlex()\r\ntextlexer.requireGrammarsSync\r\n  modulePath: require.resolve('atom-language-clojure/package.json')\r\n```\r\n\r\n### Developing\r\n\r\n* Clone this repository `git clone https://github.com/jonruttan/textlex`\r\n* Update the submodules by running `git submodule update --init --recursive`\r\n* Run `npm install` to install the dependencies, compile the CoffeeScript, and\r\n  build the grammars\r\n* Run `npm test` to run the specs\r\n\r\n:green_heart: Pull requests are greatly appreciated and welcomed.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}